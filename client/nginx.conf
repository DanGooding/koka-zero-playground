# if client asks to upgrade, add header 'Connection: upgrade'
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name koka-zero.danielgooding.uk;
  ssl_certificate         /etc/letsencrypt/live/koka-zero-certificate/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/koka-zero-certificate/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/koka-zero-certificate/chain.pem;

  location /ws {
    # docker overlay network's resolver
    resolver 127.0.0.11;
    resolver_timeout 10s;

    # Nginx wants to do the DNS resolution at startup, and crash if it fails.
    # However it may often fail at startup if the service is also just starting up.
    # So use a variable to force nginx to resolve at request-time.
    set $upstream compile-and-run-service;
    proxy_pass http://$upstream;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }

  location /metrics/ {
    resolver 127.0.0.11;
    resolver_timeout 10s;

    set $upstream grafana;
    proxy_pass http://$upstream:3000/;
  }
  location = /metrics {
    return 302 /metrics/;
  }

  location / {
    root /data/www;
    try_files $uri /index.html;
  }
}
