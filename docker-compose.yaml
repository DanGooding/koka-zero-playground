# this is a base file which the .prod/.dev files add to

x-health-check: &healthcheck
  test:
    [ "CMD-SHELL",
      "wget -q -O - http://localhost/actuator/health | jq --exit-status '.status == \"UP\"' >/dev/null" ]
  timeout: 5s
  interval: 30s

x-logging-env-vars: &logging-env-vars
  DEBUG: "false"
  ORG_SPRINGFRAMEWORK_WEB_FILTER_COMMONSREQUESTLOGGINGFILTER: "WARN"
  LOGGING_LEVEL_ROOT: "warn"
  MANAGEMENT_OBSERVATIONS_ANNOTATIONS_ENABLED: "true"
  SERVER_TOMCAT_MBEANREGISTRY_ENABLED: "true"
  MANAGEMENT_METRICS_DISTRIBUTION_PERCENTILES_HTTP_SERVER_REQUESTS: "0.9, 0.99"

services:
  compile-service:
    volumes:
      - exe-store:/etc/exe-store
    environment:
      <<: *logging-env-vars
      # binds property local-exe-store.directory
      LOCALEXESTORE_DIRECTORY: "/etc/exe-store"
    networks:
      common:
      monitoring:
    healthcheck: *healthcheck

  runner-service:
    # bwrap creates zombies, so need an init process to reap them
    init: true
    cap_add:
      - SYS_ADMIN
    # ideally we would set the seccomp profile just for this service,
    # however docker swarm doesn't support passing this option yet
    # so instead we set it at the daemon level.
    #    security_opt:
    #      - seccomp:bwrap-seccomp-profi~le.json
    volumes:
      - exe-store:/etc/exe-store
    environment:
      <<: *logging-env-vars
      LOCALEXESTORE_DIRECTORY: "/etc/exe-store"
    networks:
      common:
      monitoring:
    healthcheck: *healthcheck

  compile-and-run-service:
    environment:
      <<: *logging-env-vars
      COMPILE_SERVICE_HOSTNAME: "compile-service"
      RUNNER_SERVICE_HOSTNAME: "runner-service"
    networks:
      common:
      monitoring:
    healthcheck: *healthcheck

  prometheus:
    volumes:
      - prometheus-data:/prometheus

    networks:
      monitoring:

  grafana:
    image:
      grafana/grafana-oss:12.1.1
    volumes:
      - grafana-storage:/var/lib/grafana
    secrets:
      - grafana-admin-password
    environment:
      GF_SECURITY_ADMIN_PASSWORD__FILE: "/run/secrets/grafana-admin-password"
      GF_LOG_LEVEL: "warn"
    networks:
      monitoring:

volumes:
  exe-store:
  prometheus-data:
  grafana-storage:

networks:
  monitoring:

secrets:
  grafana-admin-password:
    file: metrics/grafana-admin-password.txt
